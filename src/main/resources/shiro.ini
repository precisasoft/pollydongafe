[main]
#dataSource = org.apache.shiro.jndi.JndiObjectFactory
#dataSource.resourceRef = true
#dataSource.requiredType = javax.sql.DataSource  
#dataSource.resourceName = java://app/jdbc/abinadi
ds = org.postgresql.ds.PGSimpleDataSource
ds.serverName =localhost
ds.user = chrisvv
ds.password = palita
ds.databaseName = abinadi
ds.portNumber = 0

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
#credentialsMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
#credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#credentialsMatcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $credentialsMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
 # configure the passwordService to use the settings you desire
 
 passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
 passwordMatcher.passwordService = $passwordService
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.dataSource = $ds
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role_name FROM user_roles WHERE username = ?
jdbcRealm.permissionsQuery = SELECT roleper FROM roles_permissions WHERE role_name = ?
jdbcRealm.credentialsMatcher = $passwordMatcher
# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
securityManager.realm = $jdbcRealm
#[users]
#root = secret, admin
#guest = guest, guest
#presidentskroob = 12345, president
#darkhelmet = ludicrousspeed, darklord, schwartz
#lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
#[roles]
#admin = *
#schwartz = lightsaber:*
#goodguy = winnebago:drive:eagle5